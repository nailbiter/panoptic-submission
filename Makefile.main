#train parameters
CROP_SIZE=32

#vars
VAL_INPUT_JSON_FILE=./coco/annotations/panoptic_val2017.json
TRAIN_INPUT_JSON_FILE=./coco/annotations/panoptic_train2017.json
DIRS=\
	train\
	train_labels\
	val\
	val_labels\
	test\
	test_labels
TMP=coco/tmp
FLAGDIR=$(TMP)/flags
ANNOTATIONS=$(TMP)/annotations
CATEGORIES_JSON_FILE=$(ANNOTATIONS)/panoptic_coco_categories.json

#phony targets
test: $(addprefix $(FLAGDIR)/,$(addsuffix .txt,predict resize totwochan))
	mkdir -p $(TMP)/val
	$(PYTHON) converters/2channels2panoptic_coco_format.py \
		--source_folder $(TMP)/test_twochan \
		--images_json_file $(TMP)/annotations/panoptic_val2017.json \
		--categories_json_file $(CATEGORIES_JSON_FILE) \
		--segmentations_folder $(TMP)/val \
		--predictions_json_file $(TMP)/val.json \
	       	2>&1 | tee log/converter2chan.log.txt
$(FLAGDIR)/totwochan.txt: $(PYDIR)/imageconverter.py
	$(PYTHON) $< --mode TOTWOCHAN --from $(TMP)/test_resized --to $(TMP)/test_twochan \
		--industrious \
		2>&1 | tee log/totwochan.log.txt
	touch $@
$(FLAGDIR)/resize.txt: $(PERLDIR)/imageconverter.pl
	./$(PERLDIR)/imageconverter.pl --from $(TMP)/test_out --to $(TMP)/test_resized \
		--mode RESIZE2 --refdir coco/val_labels
	touch $@
$(FLAGDIR)/predict.txt:coco/test.txt coco/predict_list.txt
	mkdir -p coco/test_out
	$(PYTHON) predict.py \
		--checkpoint_path \
			checkpoints/latest_model_FC-DenseNet56_coco.ckpt\
		--dataset coco\
		--outdir coco/test_out\
		--image coco/predict_list.txt 2>log/predict.log.txt
	touch $@
coco/predict_list.txt: coco/val.txt
	find coco/val|grep jpg > $@
train: $(CLASS_DICT) train_params.val.json train_params.train.json coco/train.txt coco/train_labels.txt #$(addsuffix /.gitignore,$(addprefix coco/,$(DIRS))) 
	$(PYTHON) train.py\
		--num_epochs 1\
		--crop_height $(CROP_SIZE)\
		--crop_width  $(CROP_SIZE)\
		--dataset coco 2>&1 | tee log/train.log.txt
train_params.train.json: pl/get_image_size.pl #$(addsuffix /.gitignore,$(addprefix coco/,$(DIRS)))
	./$< coco/jpgs/train > $@ 2> log/train_params.log.txt
train_params.val.json: pl/get_image_size.pl #$(addsuffix /.gitignore,$(addprefix coco/,$(DIRS)))
	./$< coco/jpgs/val > $@ 2> log/train_params.log.txt
coco/val_labels/.gitignore: $(VAL_INPUT_JSON_FILE)
	mkdir -p $(dir $@)
	$(PYTHON2) $(PANOPTIC2SEMANTIC_SEGMENTATION)\
		--input_json_file $<\
	  	--semantic_seg_folder $(dir $@)\
		--categories_json_file $(CATEGORIES_JSON_FILE)\
		2>log/$(notdir $(basename $(SEMANTIC_SEGMENTATION_JSON))).log.txt
	echo '*.png' > $@
coco/test_labels/.gitignore:
	mkdir -p $(dir $@)
	touch $@
coco/train.txt: coco/train_full/.gitignore $(PERLDIR)/slicer.pl
	rm -rf coco/train coco/train_labels
	./$(PERLDIR)/slicer.pl --from coco/train_full --to coco/train --ext jpg \
		--from coco/train_labels_full --to coco/train_labels --ext png \
		--slicenum 9\
		--testflag 0
	touch $@
coco/train_labels.txt: coco/train_labels_full/.gitignore
	touch $@
coco/train_labels_full/.gitignore: $(TRAIN_INPUT_JSON_FILE)
	mkdir -p $(dir $@)
	$(PYTHON2) $(PANOPTIC2SEMANTIC_SEGMENTATION)\
		--input_json_file $<\
	  	--semantic_seg_folder $(dir $@)\
		--categories_json_file $(CATEGORIES_JSON_FILE)\
		2>log/$(notdir $(basename $(SEMANTIC_SEGMENTATION_JSON))).log.txt
	echo '*.png' > $@
#~/anaconda3/bin/python predict.py --image coco/val/000000000285.jpg --checkpoint_path checkpoints/latest_model_FC-DenseNet56_coco.ckpt --model FC-DenseNet56  --dataset coco
